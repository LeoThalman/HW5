@*gets the model*@
@model HW5.Models.DMV


    @*Title of page*@
<h2>@ViewBag.Title</h2>

@*Form to edit a current row in the database *@
@using (Html.BeginForm())
{
    @*Helps prevent forgery of requests*@
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @*Gets the error messages*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Input box for the field to be edited*@
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @*Error message for the field*@
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                 </div>
            </div>

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.Permit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   @*Input box for the field to be edited*@
                   @Html.EditorFor(model => model.Permit, new { htmlAttributes = new { @class = "form-control" } })
                   @*Error message for the field*@
                   @Html.ValidationMessageFor(model => model.Permit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Input box for the field to be edited*@
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @*Error message for the field*@
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.ResidenceAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Input box for the field to be edited*@
                    @Html.EditorFor(model => model.ResidenceAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @*Error message for the field*@
                    @Html.ValidationMessageFor(model => model.ResidenceAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Input box for the field to be edited*@
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @*Error message for the field*@
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.StateAbbreviated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Input box for the field to be edited*@
                    @Html.EditorFor(model => model.StateAbbreviated, new { htmlAttributes = new { @class = "form-control" } })
                    @*Error message for the field*@
                    @Html.ValidationMessageFor(model => model.StateAbbreviated, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Input box for the field to be edited*@
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @*Error message for the field*@
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*Label for the field to be edited*@
                @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Input box for the field to be edited*@
                    @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control" } })
                    @*Error message for the field*@
                    @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

<div>
    @*Link to Index*@
    @Html.ActionLink("Back to homepage", "Index")
</div>